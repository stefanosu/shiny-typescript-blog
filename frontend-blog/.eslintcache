[{"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/index.js":"1","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/reportWebVitals.ts":"2","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/NewPost.tsx":"3","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/App.tsx":"4","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserRegister.tsx":"5","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/Post.tsx":"6","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/HomePage.tsx":"7","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserLogin.tsx":"8","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/AllPosts.tsx":"9","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UpdatePost.tsx":"10","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/LogOut.tsx":"11"},{"size":540,"mtime":1610676711528,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1610301461108,"results":"14","hashOfConfig":"13"},{"size":2366,"mtime":1610936357670,"results":"15","hashOfConfig":"13"},{"size":526,"mtime":1610938529866,"results":"16","hashOfConfig":"13"},{"size":2485,"mtime":1610554582435,"results":"17","hashOfConfig":"13"},{"size":502,"mtime":1611273868036,"results":"18","hashOfConfig":"13"},{"size":971,"mtime":1611273213022,"results":"19","hashOfConfig":"13"},{"size":2453,"mtime":1610936553714,"results":"20","hashOfConfig":"13"},{"size":2057,"mtime":1611274322972,"results":"21","hashOfConfig":"13"},{"size":913,"mtime":1610554582433,"results":"22","hashOfConfig":"13"},{"size":334,"mtime":1610674758865,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pors4t",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/index.js",[],["53","54"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/reportWebVitals.ts",[],["55","56"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/NewPost.tsx",["57","58","59","60","61","62"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/App.tsx",["63","64"],"import React from \"react\";\nimport \"./App.css\";\nimport { HomePage } from \"./components/HomePage\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\n\nimport DisplayAllPosts from \"./components/AllPosts\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/allPosts\" component={DisplayAllPosts} />\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserRegister.tsx",["65","66","67","68","69","70","71","72"],"import React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nexport interface Profile {\n  username: string;\n  email: string;\n  password: string;\n}\n\nconst UserRegister: React.FC = () => {\n  const { register, handleSubmit, setValue, errors } = useForm<Profile>({});\n  const [newUser, setNewUser] = useState<Profile>();\n\n  const onSubmit = handleSubmit((userData: any) => {\n    createNewUser(userData);\n  });\n\n  const createNewUser = async (userData: any) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(userData),\n    };\n    const response = await fetch(\n      \"http://localhost:3000/api/signUp\",\n      requestOptions\n    );\n    const data = await response.json();\n    setNewUser(data);\n  };\n\n  //   <Router>\n  //   <Link to=\"/\">Home</Link>\n  // <Router/>\n\n  return (\n    <>\n      <div className='reg-container'>\n        <main className='sub-container'><span className='header'>Sign Up!</span>\n          <form className='form' onSubmit={onSubmit}> \n            <div className='username'>\n              <label htmlFor=\"username\">User Name</label>\n              <input\n                ref={register({ required: true })}\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n              />\n              {errors.username && <div className=\"error\">Enter your name</div>}\n            </div>\n            <div className='password'>\n              <label htmlFor=\"password\">Password </label>\n              <input\n                ref={register({ required: true })}\n                id=\"password\"\n                name=\"password\"\n                type=\"text\"\n              />\n              {errors.password && (\n                <div className=\"error\">Enter your last name</div>\n              )}\n            </div>\n            <div className='email'>\n              <label htmlFor=\"email\">Email</label>\n              <input\n                ref={register({ required: true })}\n                id=\"email\"\n                name=\"email\"\n                type=\"text\"\n              />\n              {errors.email && <div className=\"error\">Enter your email</div>}\n            </div>\n            <button className='btn' type=\"submit\">Register User</button>\n          </form>\n        </main>\n      </div>\n    </>\n  );\n};\nexport default UserRegister;\n","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/Post.tsx",[],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/HomePage.tsx",["73","74","75","76","77"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserLogin.tsx",["78","79","80"],"import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nexport interface UserInformation {\n  username: string;\n  password: string;\n}\n\nexport interface UserLoginProps {\n  onLogin: (status: boolean) => void;\n  onLogout: (status: boolean) => void;\n}\n\n\nconst UserLogin: React.FC<UserLoginProps> = (props: UserLoginProps) => {\n  const [user, setUser ] = useState()\n  const { onLogin, onLogout } = props;\n  const { register, handleSubmit, setValue, errors } = useForm<UserInformation>(\n    {}\n  );\n\n  const onSubmit = handleSubmit((userData: any) => {\n    loginUser(userData);\n  });\n\n  const loginUser = async (userData: any) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(userData),\n    };\n    const response = await fetch(\n      \"http://localhost:3000/api/login\",\n      requestOptions\n    );\n    const data = await response.json();\n    if (data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringify(data));\n      onLogin(true);\n      setUser(data)\n      console.log(localStorage);\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n    onLogout(false);\n  };\n\n  useEffect(() => {}, []);\n\n  return (\n    <>\n    \n    <div className='log-container'> \n      <main className='main'>\n        <form className='login-form' onSubmit={onSubmit}><span className='header'>Welcome Log Back In!</span>\n          <div className='userlogin'>\n            <label htmlFor=\"username\">User Name</label>\n            <input\n              data-testid=\"username\"\n              ref={register({ required: true })}\n              id=\"username\"\n              name=\"username\"\n              type=\"text\"\n              />\n            {errors.username && (\n              <div className=\"error\">Enter your username</div>\n            )}\n          </div>\n          <div className='loginpw'>\n            <label htmlFor=\"password\">Password </label>\n            <input\n              data-testid=\"password\"\n              ref={register({ required: true })}\n              id=\"password\"\n              name=\"password\"\n              type=\"text\"\n              />\n            {errors.password && (\n              <div className=\"error\">Enter your password</div>\n              )}\n          </div>\n          <button className='btn' type=\"submit\">Login</button>\n        </form>\n      </main>\n    </div>\n    </>\n  );\n};\n\nexport default UserLogin;\n","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/AllPosts.tsx",["81","82","83","84","85","86","87","88","89"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UpdatePost.tsx",[],["90","91"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/LogOut.tsx",["92"],"import * as React from 'react';\n\nexport interface UserLoginProps {\n  onLogout: (status: boolean) => void;\n}\n\n\n\nconst LogOut: React.FC<UserLoginProps> = (props:UserLoginProps): JSX.Element => {\n  const {onLogout} = props \n  return (\n    <div>\n      {/* <button onClick={onLogout}></button> */}\n    </div>\n  )\n}\n\n\nexport default LogOut ",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":36},{"ruleId":"97","severity":1,"message":"101","line":13,"column":10,"nodeType":"99","messageId":"100","endLine":13,"endColumn":19},{"ruleId":"97","severity":1,"message":"102","line":13,"column":21,"nodeType":"99","messageId":"100","endLine":13,"endColumn":33},{"ruleId":"97","severity":1,"message":"103","line":14,"column":35,"nodeType":"99","messageId":"100","endLine":14,"endColumn":43},{"ruleId":"97","severity":1,"message":"104","line":14,"column":45,"nodeType":"99","messageId":"100","endLine":14,"endColumn":51},{"ruleId":"97","severity":1,"message":"105","line":18,"column":10,"nodeType":"99","messageId":"100","endLine":18,"endColumn":17},{"ruleId":"97","severity":1,"message":"106","line":7,"column":3,"nodeType":"99","messageId":"100","endLine":7,"endColumn":7},{"ruleId":"97","severity":1,"message":"107","line":9,"column":3,"nodeType":"99","messageId":"100","endLine":9,"endColumn":11},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"108","line":4,"column":20,"nodeType":"99","messageId":"100","endLine":4,"endColumn":26},{"ruleId":"97","severity":1,"message":"109","line":5,"column":3,"nodeType":"99","messageId":"100","endLine":5,"endColumn":9},{"ruleId":"97","severity":1,"message":"110","line":6,"column":3,"nodeType":"99","messageId":"100","endLine":6,"endColumn":8},{"ruleId":"97","severity":1,"message":"106","line":7,"column":3,"nodeType":"99","messageId":"100","endLine":7,"endColumn":7},{"ruleId":"97","severity":1,"message":"107","line":8,"column":3,"nodeType":"99","messageId":"100","endLine":8,"endColumn":11},{"ruleId":"97","severity":1,"message":"103","line":18,"column":35,"nodeType":"99","messageId":"100","endLine":18,"endColumn":43},{"ruleId":"97","severity":1,"message":"111","line":19,"column":10,"nodeType":"99","messageId":"100","endLine":19,"endColumn":17},{"ruleId":"97","severity":1,"message":"112","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":15},{"ruleId":"97","severity":1,"message":"108","line":5,"column":27,"nodeType":"99","messageId":"100","endLine":5,"endColumn":33},{"ruleId":"97","severity":1,"message":"109","line":5,"column":34,"nodeType":"99","messageId":"100","endLine":5,"endColumn":40},{"ruleId":"97","severity":1,"message":"110","line":5,"column":42,"nodeType":"99","messageId":"100","endLine":5,"endColumn":47},{"ruleId":"97","severity":1,"message":"106","line":5,"column":49,"nodeType":"99","messageId":"100","endLine":5,"endColumn":53},{"ruleId":"97","severity":1,"message":"113","line":16,"column":10,"nodeType":"99","messageId":"100","endLine":16,"endColumn":14},{"ruleId":"97","severity":1,"message":"103","line":18,"column":35,"nodeType":"99","messageId":"100","endLine":18,"endColumn":43},{"ruleId":"97","severity":1,"message":"114","line":45,"column":9,"nodeType":"99","messageId":"100","endLine":45,"endColumn":15},{"ruleId":"97","severity":1,"message":"115","line":1,"column":38,"nodeType":"99","messageId":"100","endLine":1,"endColumn":49},{"ruleId":"97","severity":1,"message":"112","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":15},{"ruleId":"97","severity":1,"message":"116","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":12},{"ruleId":"97","severity":1,"message":"117","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":18},{"ruleId":"97","severity":1,"message":"118","line":25,"column":11,"nodeType":"99","messageId":"100","endLine":25,"endColumn":19},{"ruleId":"97","severity":1,"message":"119","line":25,"column":21,"nodeType":"99","messageId":"100","endLine":25,"endColumn":33},{"ruleId":"97","severity":1,"message":"103","line":25,"column":35,"nodeType":"99","messageId":"100","endLine":25,"endColumn":43},{"ruleId":"97","severity":1,"message":"104","line":25,"column":45,"nodeType":"99","messageId":"100","endLine":25,"endColumn":51},{"ruleId":"97","severity":1,"message":"120","line":82,"column":10,"nodeType":"99","messageId":"100","endLine":82,"endColumn":11},{"ruleId":"93","replacedBy":"121"},{"ruleId":"95","replacedBy":"122"},{"ruleId":"97","severity":1,"message":"123","line":10,"column":10,"nodeType":"99","messageId":"100","endLine":10,"endColumn":18},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","'setValue' is assigned a value but never used.","'errors' is assigned a value but never used.","'newPost' is assigned a value but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'newUser' is assigned a value but never used.","'NewPost' is defined but never used.","'user' is assigned a value but never used.","'logout' is assigned a value but never used.","'useCallback' is defined but never used.","'Post' is defined but never used.","'UpdatePost' is defined but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'e' is defined but never used.",["124"],["125"],"'onLogout' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]