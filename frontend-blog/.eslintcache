[{"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/index.js":"1","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/reportWebVitals.ts":"2","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/NewPost.tsx":"3","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/App.tsx":"4","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserRegister.tsx":"5","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/Post.tsx":"6","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/HomePage.tsx":"7","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserLogin.tsx":"8","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/AllPosts.tsx":"9","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UpdatePost.tsx":"10","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/LogOut.tsx":"11"},{"size":500,"mtime":1610262456122,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1610301461108,"results":"14","hashOfConfig":"13"},{"size":2325,"mtime":1610524696458,"results":"15","hashOfConfig":"13"},{"size":525,"mtime":1610521847741,"results":"16","hashOfConfig":"13"},{"size":2452,"mtime":1610532484737,"results":"17","hashOfConfig":"13"},{"size":688,"mtime":1610427324633,"results":"18","hashOfConfig":"13"},{"size":937,"mtime":1610527733550,"results":"19","hashOfConfig":"13"},{"size":2267,"mtime":1610533526297,"results":"20","hashOfConfig":"13"},{"size":3757,"mtime":1610519628365,"results":"21","hashOfConfig":"13"},{"size":913,"mtime":1610412699398,"results":"22","hashOfConfig":"13"},{"size":334,"mtime":1610528441276,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1eeism",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/index.js",[],["49","50"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/reportWebVitals.ts",[],["51","52"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/NewPost.tsx",["53","54","55","56","57","58","59","60","61","62","63"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/App.tsx",["64","65"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserRegister.tsx",["66","67","68","69","70","71","72","73"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/Post.tsx",[],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/HomePage.tsx",["74","75","76","77"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserLogin.tsx",["78","79","80"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/AllPosts.tsx",["81","82","83","84","85","86","87"],"import React, { useState, useEffect } from \"react\";\nimport NewPost from \"./NewPost\";\nimport Post from \"./Post\";\nimport UpdatePost from \"./UpdatePost\"\nimport { useForm } from \"react-hook-form\";\n\ninterface PostType {\n  title: string;\n  content: string;\n  id: number;\n}\n\n\nconst DisplayAllPosts = () => {\n  const [state, setState] = useState({title: '', content: ''});\n\n  const [allPosts, setAllPosts] = useState<PostType[]>([]);\n\n  const [isCreateNewPost, setIsCreateNewPost] = useState(false);\n  const [isUpdatePost, setIsUpdatePost] = useState(false);\n  const [editPostId, setEditPostId] = useState(0);\n\n\n  const { register, handleSubmit, setValue, errors } = useForm<PostType>({});\n\n  \n  const getAllPosts = async (postsData: any) => {\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify( postsData )\n    };\n    const response = await fetch(\"http://localhost:3000/api/getPosts\", requestOptions);\n    const data = await response.json()\n\n  }\n\n  // useEffect(() => {\n  //   getAllPosts()\n  // }, []);\n\n\n\n  const handleChange = (e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const {name, value} = e.target\n    setState((s) => ({\n      ...s,  \n      [name]: value\n    }))\n  }\n\n  const toggleCreateNewPost = () => {\n    setIsCreateNewPost(!isCreateNewPost);\n  };\n  const toggleUpdatePostComponent = () => {\n    if(isUpdatePost) {\n      setIsUpdatePost(!isUpdatePost)\n      setState({title: '', content:\"\"})\n    } else {\n      setIsUpdatePost(!isUpdatePost)\n      const post = allPosts.find(post => {\n        return post.id === editPostId;\n      }); \n      if(post) {\n        setState(post)\n      }\n    }\n  }\n  const editPost = (id:number) => {\n    setEditPostId(id);\n    console.log(id)\n    toggleUpdatePostComponent();\n  };\n\n\n  const deletePost = (id:number) => {\n    // setDeletePost(id);\n    setAllPosts(allPosts.filter( post => post.id !== id ));\n\n  };\n\n\n\n  const updatePost = (e:React.ChangeEvent) => {\n    e.preventDefault();\n    const updatedPost = allPosts.map(eachPost => {\n      if (eachPost.id === editPostId) {\n        console.log([eachPost.id, editPostId] )\n        return {\n          ...eachPost,\n          title: state.title || eachPost.title,\n          content: state.content || eachPost.content\n        };\n      }\n      console.log(eachPost)\n      return eachPost;\n    });\n    setAllPosts(updatedPost);\n    toggleUpdatePostComponent();\n  };\n\n  const savePost = (e: React.ChangeEvent)=> {\n    e.preventDefault();\n    debugger\n    const id = Date.now();\n    setAllPosts([...allPosts, { title: state.title, content: state.content, id}]);\n    console.log(allPosts);\n    setState({title: '', content: ''});\n    toggleCreateNewPost();\n  };\n\n  if (isCreateNewPost) {\n    return (\n      <>\n        <NewPost\n          handleChange={handleChange}\n          savePost={savePost}\n        />\n      </>\n    );\n  }\n  else if (isUpdatePost) {\n    \n    return (\n      <UpdatePost\n        title={state.title}\n        content={state.content}\n        updatePost={updatePost}\n        handleChange={handleChange}\n      />\n    );\n  }\n  return (\n    <>\n      <h2>All Posts</h2>\n      {!allPosts.length ? (\n        <div>\n          <h3>There is nothing to see here!</h3>\n        </div>\n      ) : (\n        allPosts.map(eachPost => {\n          return (\n            <Post\n              id={eachPost.id}\n              key={eachPost.id}\n              title={eachPost.title}\n              content={eachPost.content}\n              deletePost={deletePost}\n              editPost={editPost}\n            />\n          );\n        })\n      )}\n      <br />\n      <br />\n      <button onClick={toggleCreateNewPost}>Create New</button>\n    </>\n  );\n};\nexport default DisplayAllPosts;\n","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UpdatePost.tsx",[],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/LogOut.tsx",["88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"97","line":4,"column":20,"nodeType":"95","messageId":"96","endLine":4,"endColumn":26},{"ruleId":"93","severity":1,"message":"98","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":8},{"ruleId":"93","severity":1,"message":"99","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":7},{"ruleId":"93","severity":1,"message":"100","line":7,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":9},{"ruleId":"93","severity":1,"message":"101","line":8,"column":3,"nodeType":"95","messageId":"96","endLine":8,"endColumn":11},{"ruleId":"93","severity":1,"message":"102","line":19,"column":10,"nodeType":"95","messageId":"96","endLine":19,"endColumn":19},{"ruleId":"93","severity":1,"message":"103","line":19,"column":21,"nodeType":"95","messageId":"96","endLine":19,"endColumn":33},{"ruleId":"93","severity":1,"message":"104","line":20,"column":35,"nodeType":"95","messageId":"96","endLine":20,"endColumn":43},{"ruleId":"93","severity":1,"message":"105","line":20,"column":45,"nodeType":"95","messageId":"96","endLine":20,"endColumn":51},{"ruleId":"93","severity":1,"message":"106","line":24,"column":10,"nodeType":"95","messageId":"96","endLine":24,"endColumn":17},{"ruleId":"93","severity":1,"message":"99","line":7,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":7},{"ruleId":"93","severity":1,"message":"101","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":11},{"ruleId":"93","severity":1,"message":"94","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"97","line":4,"column":20,"nodeType":"95","messageId":"96","endLine":4,"endColumn":26},{"ruleId":"93","severity":1,"message":"100","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":9},{"ruleId":"93","severity":1,"message":"98","line":6,"column":3,"nodeType":"95","messageId":"96","endLine":6,"endColumn":8},{"ruleId":"93","severity":1,"message":"99","line":7,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":7},{"ruleId":"93","severity":1,"message":"101","line":8,"column":3,"nodeType":"95","messageId":"96","endLine":8,"endColumn":11},{"ruleId":"93","severity":1,"message":"104","line":18,"column":35,"nodeType":"95","messageId":"96","endLine":18,"endColumn":43},{"ruleId":"93","severity":1,"message":"107","line":19,"column":10,"nodeType":"95","messageId":"96","endLine":19,"endColumn":17},{"ruleId":"93","severity":1,"message":"97","line":5,"column":27,"nodeType":"95","messageId":"96","endLine":5,"endColumn":33},{"ruleId":"93","severity":1,"message":"100","line":5,"column":34,"nodeType":"95","messageId":"96","endLine":5,"endColumn":40},{"ruleId":"93","severity":1,"message":"98","line":5,"column":42,"nodeType":"95","messageId":"96","endLine":5,"endColumn":47},{"ruleId":"93","severity":1,"message":"99","line":5,"column":49,"nodeType":"95","messageId":"96","endLine":5,"endColumn":53},{"ruleId":"93","severity":1,"message":"108","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"104","line":17,"column":35,"nodeType":"95","messageId":"96","endLine":17,"endColumn":43},{"ruleId":"93","severity":1,"message":"109","line":43,"column":9,"nodeType":"95","messageId":"96","endLine":43,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":1,"column":27,"nodeType":"95","messageId":"96","endLine":1,"endColumn":36},{"ruleId":"93","severity":1,"message":"110","line":24,"column":11,"nodeType":"95","messageId":"96","endLine":24,"endColumn":19},{"ruleId":"93","severity":1,"message":"111","line":24,"column":21,"nodeType":"95","messageId":"96","endLine":24,"endColumn":33},{"ruleId":"93","severity":1,"message":"104","line":24,"column":35,"nodeType":"95","messageId":"96","endLine":24,"endColumn":43},{"ruleId":"93","severity":1,"message":"105","line":24,"column":45,"nodeType":"95","messageId":"96","endLine":24,"endColumn":51},{"ruleId":"93","severity":1,"message":"112","line":27,"column":9,"nodeType":"95","messageId":"96","endLine":27,"endColumn":20},{"ruleId":"93","severity":1,"message":"113","line":34,"column":11,"nodeType":"95","messageId":"96","endLine":34,"endColumn":15},{"ruleId":"93","severity":1,"message":"114","line":10,"column":10,"nodeType":"95","messageId":"96","endLine":10,"endColumn":18},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","'setValue' is assigned a value but never used.","'errors' is assigned a value but never used.","'newPost' is assigned a value but never used.","'newUser' is assigned a value but never used.","'useState' is defined but never used.","'logout' is assigned a value but never used.","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'getAllPosts' is assigned a value but never used.","'data' is assigned a value but never used.","'onLogout' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]