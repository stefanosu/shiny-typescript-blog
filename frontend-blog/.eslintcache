[{"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/index.js":"1","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/reportWebVitals.ts":"2","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/NewPost.tsx":"3","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/App.tsx":"4","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/DogImage.tsx":"5","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/useFetch.ts":"6","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserRegister.tsx":"7","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/Post.tsx":"8"},{"size":500,"mtime":1610262456122,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1610301461108,"results":"11","hashOfConfig":"10"},{"size":813,"mtime":1610301856801,"results":"12","hashOfConfig":"10"},{"size":834,"mtime":1610430856479,"results":"13","hashOfConfig":"10"},{"size":418,"mtime":1610426679703,"results":"14","hashOfConfig":"10"},{"size":1386,"mtime":1610414109889,"results":"15","hashOfConfig":"10"},{"size":1378,"mtime":1610424772135,"results":"16","hashOfConfig":"10"},{"size":688,"mtime":1610427324633,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1eeism",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/index.js",[],["39","40"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/reportWebVitals.ts",[],["41","42"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/NewPost.tsx",[],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/App.tsx",["43","44","45","46"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/DogImage.tsx",[],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/useFetch.ts",["47"],"import { useState, useEffect, useCallback } from \"react\";\n\ninterface RequestProps<T> {\n  url: RequestInfo;\n  init?: RequestInit;\n  processData?: (data: any) => T;\n}\n\nexport const useFetch = <T>({ url, init, processData }: RequestProps<T>) => {\n  // Response state\n  const [data, setData] = useState<T>();\n\n  // Turn objects into strings for useCallback & useEffect dependencies\n  const [stringifiedUrl, stringifiedInit] = [JSON.stringify(url), JSON.stringify(init)];\n\n  // If no processing function is passed just cast the object to type T\n  const processJson = useCallback(processData || ((jsonBody: any) => jsonBody as T), []);\n\n  useEffect(() => {\n    /// Define asynchronous function\n    const fetchApi = async () => {\n      try {\n        // Fetch data from REST API\n        const response = await fetch(url, init);\n\n        if (response.status === 200) {\n          // Extract json\n          const rawData: any = await response.json();\n          const processedData = processJson(rawData);\n          setData(processedData);\n        } else {\n          console.error(`Error ${response.status} ${response.statusText}`);\n        }\n      } catch (error) {\n        console.error(`Error ${error}`);\n      }\n    };\n\n    // Call async function\n    fetchApi();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stringifiedUrl, stringifiedInit, processJson]);\n\n  return data;\n};\n","/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/UserRegister.tsx",["48"],"import React from 'react'; \nimport { useForm } from 'react-hook-form'\nimport { useFetch } from \"./useFetch\";\n\n\n\nexport type Profile = {\n  username: string\n  email: string\n  password: string\n}\n\nconst UserSignUp : React.FC<Profile> = () => {\n\n  const {register, handleSubmit, errors} = useForm<Profile>()\n\n  const onSubmit = handleSubmit((data) => {\n    alert(JSON.stringify(data))\n  })\n\n  const data = useFetch<Profile>({\n    url: \"\"\n  });\n\n  return (\n    <main>\n    <form onSubmit={onSubmit}>\n      <div>\n        <label htmlFor=\"username\">User Name</label>\n        <input ref={register({ required: true })} id=\"username\" name=\"username\" type=\"text\"/>\n        {\n          errors.username && <div className=\"error\">Enter your name</div>\n        }\n      </div>\n      <div>\n        <label htmlFor=\"password\">Password </label>\n        <input ref={register({ required: true })} id=\"password\" name=\"password\" type=\"text\"/>\n        {\n          errors.password && <div className=\"error\">Enter your last name</div>\n        }\n      </div>\n      <div>\n        <label htmlFor=\"email\">Email</label>\n        <input ref={register({ required: true })} id=\"email\" name=\"email\" type=\"text\"/>\n        {\n          errors.email && <div className=\"error\">Enter your email</div>\n        }\n      </div>\n      <button type=\"submit\">Save</button>\n    </form>\n    </main>\n  );\n}\n\n\nexport default UserSignUp;",["49","50"],"/Users/stefanosugbit/Downloads/onramp-fullstack-CRUD-project-main/frontend-blog/src/components/Post.tsx",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":12},{"ruleId":"55","severity":1,"message":"59","line":7,"column":16,"nodeType":"57","messageId":"58","endLine":7,"endColumn":26},{"ruleId":"55","severity":1,"message":"60","line":10,"column":7,"nodeType":"57","messageId":"58","endLine":10,"endColumn":20},{"ruleId":"55","severity":1,"message":"61","line":14,"column":7,"nodeType":"57","messageId":"58","endLine":14,"endColumn":22},{"ruleId":"62","severity":1,"message":"63","line":17,"column":23,"nodeType":"57","endLine":17,"endColumn":34},{"ruleId":"55","severity":1,"message":"64","line":21,"column":9,"nodeType":"57","messageId":"58","endLine":21,"endColumn":13},{"ruleId":"51","replacedBy":"65"},{"ruleId":"53","replacedBy":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"@typescript-eslint/no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","'SinglePost' is defined but never used.","'dummyEditPost' is assigned a value but never used.","'dummyDeletePost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","'data' is assigned a value but never used.",["67"],["68"],"no-global-assign","no-unsafe-negation"]